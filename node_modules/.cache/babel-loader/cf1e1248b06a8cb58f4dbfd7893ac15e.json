{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6587\\u4EF6\\\\Desktop\\\\\\u524D\\u7AEF\\u671F\\u4E2D\\u4F5C\\u696D\\\\src\\\\store\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport products from \"../json/products.json\";\nimport { SET_PAGE_CONTENT, SET_NAVBAR_ACTIVEITEM, ADD_CART_ITEM } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContext = /*#__PURE__*/createContext();\nconst initialState = {\n  page: {\n    products\n  },\n  ProductNavBar: {\n    activeItem: \"/\"\n  },\n  cartItems: []\n};\nlet cartItems = {};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case SET_PAGE_CONTENT:\n      return { ...state,\n        page: { ...state.page,\n          products: action.payload\n        }\n      };\n\n    case SET_NAVBAR_ACTIVEITEM:\n      return { ...state,\n        ProductNavBar: {\n          activeItem: action.payload\n        }\n      };\n\n    case ADD_CART_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.id === item.id);\n\n      if (product) {\n        cartItems = state.cartItems.map(x => x.id === product.id ? item : x);\n        return { ...state,\n          cartItems\n        };\n      }\n\n      cartItems = [...state.cartItems, item];\n      return { ...state,\n        cartItems\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 8\n  }, this);\n}\n\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StoreProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["D:/文件/Desktop/前端期中作業/src/store/index.js"],"names":["createContext","useReducer","products","SET_PAGE_CONTENT","SET_NAVBAR_ACTIVEITEM","ADD_CART_ITEM","StoreContext","initialState","page","ProductNavBar","activeItem","cartItems","reducer","state","action","type","payload","item","product","find","x","id","map","StoreProvider","props","dispatch","value","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SACIC,gBADJ,EAEIC,qBAFJ,EAGIC,aAHJ,QAIO,oBAJP;;AAMA,OAAO,MAAMC,YAAY,gBAAGN,aAAa,EAAlC;AAEP,MAAMO,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACHN,IAAAA;AADG,GADW;AAIjBO,EAAAA,aAAa,EAAE;AACXC,IAAAA,UAAU,EAAE;AADD,GAJE;AAOjBC,EAAAA,SAAS,EAAE;AAPM,CAArB;AAUC,IAAIA,SAAS,GAAG,EAAhB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7B,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKZ,gBAAL;AACG,aAAO,EACJ,GAAGU,KADC;AAEJL,QAAAA,IAAI,EAAE,EACH,GAAGK,KAAK,CAACL,IADN;AAEHN,UAAAA,QAAQ,EAAEY,MAAM,CAACE;AAFd;AAFF,OAAP;;AAOF,SAAKZ,qBAAL;AACI,aAAO,EACJ,GAAGS,KADC;AAEJJ,QAAAA,aAAa,EAAE;AACZC,UAAAA,UAAU,EAAEI,MAAM,CAACE;AADP;AAFX,OAAP;;AAMJ,SAAKX,aAAL;AACI,YAAMY,IAAI,GAAGH,MAAM,CAACE,OAApB;AACA,YAAME,OAAO,GAAGL,KAAK,CAACF,SAAN,CAAgBQ,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASJ,IAAI,CAACI,EAA1C,CAAhB;;AACA,UAAIH,OAAJ,EAAa;AACTP,QAAAA,SAAS,GAAGE,KAAK,CAACF,SAAN,CAAgBW,GAAhB,CAAqBF,CAAD,IAC5BA,CAAC,CAACC,EAAF,KAASH,OAAO,CAACG,EAAjB,GAAsBJ,IAAtB,GAA6BG,CADrB,CAAZ;AAGA,eAAO,EAAE,GAAGP,KAAL;AAAYF,UAAAA;AAAZ,SAAP;AACH;;AACDA,MAAAA,SAAS,GAAG,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBM,IAArB,CAAZ;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA;AAAZ,OAAP;;AACL;AACG,aAAOE,KAAP;AA5BN;AA8BF;;AAED,OAAO,SAASU,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAClC,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBxB,UAAU,CAACW,OAAD,EAAUL,YAAV,CAApC;AACA,QAAMmB,KAAK,GAAG;AAAEb,IAAAA,KAAF;AAASY,IAAAA;AAAT,GAAd;AAEA,sBACG,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA,cACIF,KAAK,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,UADH;AAKF;;GATeJ,a;;KAAAA,a","sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport products from \"../json/products.json\"\r\nimport {\r\n    SET_PAGE_CONTENT,\r\n    SET_NAVBAR_ACTIVEITEM,\r\n    ADD_CART_ITEM,\r\n} from \"../utils/constants\"\r\n\r\nexport const StoreContext = createContext();\r\n\r\nconst initialState = {\r\n    page: {\r\n       products,\r\n    },\r\n    ProductNavBar: {\r\n        activeItem: \"/\",\r\n    },\r\n    cartItems: [],\r\n };\r\n\r\n let cartItems = {};\r\n\r\n function reducer(state, action) {\r\n    switch (action.type) {\r\n       case SET_PAGE_CONTENT:\r\n          return {\r\n             ...state,\r\n             page: {\r\n                ...state.page,\r\n                products: action.payload,\r\n             },\r\n          };\r\n        case SET_NAVBAR_ACTIVEITEM:\r\n            return {\r\n               ...state,\r\n               ProductNavBar: {\r\n                  activeItem: action.payload\r\n               }\r\n            }  \r\n        case ADD_CART_ITEM:\r\n            const item = action.payload;\r\n            const product = state.cartItems.find((x) => x.id === item.id);\r\n            if (product) {\r\n                cartItems = state.cartItems.map((x) =>\r\n                    x.id === product.id ? item : x\r\n                );\r\n                return { ...state, cartItems };\r\n            }\r\n            cartItems = [...state.cartItems, item];\r\n            return { ...state, cartItems };\r\n       default:\r\n          return state;\r\n    }\r\n }\r\n \r\n export function StoreProvider(props) {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const value = { state, dispatch };\r\n \r\n    return (\r\n       <StoreContext.Provider value={value}>\r\n          {props.children}\r\n       </StoreContext.Provider>\r\n    );\r\n }"]},"metadata":{},"sourceType":"module"}